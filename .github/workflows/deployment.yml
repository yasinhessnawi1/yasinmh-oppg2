name: 'Terraform Deployment'

on:
  push:
    branches:
      - 'dev'
      - 'staging'
      - 'prod'

jobs:
  deploy:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2

      - name: 'Terraform Init'
        run: terraform init -backend-config="key=terraform.${{ github.ref_name }}.tfstate"

      - name: 'Terraform Plan'
        run: terraform plan -var-file="terraform.${{ github.ref_name }}.tfvars"

      - name: 'Terraform Apply'
        if: github.ref_name != 'prod' || (github.ref_name == 'prod' && github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve -var-file="terraform.${{ github.ref_name }}.tfvars"

    # For production, require manual approval
  deploy_prod:
    needs: deploy
    if: github.ref_name == 'prod'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: 'Awaiting Manual Approval'
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2

      - name: 'Terraform Init'
        run: terraform init -backend-config="key=deployments/prod.tfstate"

      - name: 'Terraform Plan'
        run: terraform plan -var-file="terraform.prod.tfvars"

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve -var-file="terraform.prod.tfvars"