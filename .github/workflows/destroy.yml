name: Terraform Destroy Workflow

on:
  workflow_dispatch: # Allows you to manually trigger the workflow

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.10  # Adjust to your Terraform version if needed

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./deployments

      - name: Select Environment and Destroy
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            terraform destroy -auto-approve -var-file="dev.tfvars"
          elif [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            terraform destroy -auto-approve -var-file="staging.tfvars"
          elif [[ "${{ github.event.inputs.environment }}" == "prod" ]]; then
            terraform destroy -auto-approve -var-file="prod.tfvars"
          else
            echo "Environment not recognized"
            exit 1
          fi
        working-directory: ./deployments